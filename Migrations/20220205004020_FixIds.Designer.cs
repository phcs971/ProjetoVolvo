// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoVolvo.Models;

#nullable disable

namespace ProjetoVolvo.Migrations
{
    [DbContext(typeof(DealershipContext))]
    [Migration("20220205004020_FixIds")]
    partial class FixIds
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AccessoryCar", b =>
                {
                    b.Property<int>("AccessoriesAccessoryId")
                        .HasColumnType("int");

                    b.Property<string>("CarsNumChassi")
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("AccessoriesAccessoryId", "CarsNumChassi");

                    b.HasIndex("CarsNumChassi");

                    b.ToTable("AccessoryCar");
                });

            modelBuilder.Entity("ProjetoVolvo.Models.Accessory", b =>
                {
                    b.Property<int>("AccessoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccessoryId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AccessoryId");

                    b.ToTable("Accessories");
                });

            modelBuilder.Entity("ProjetoVolvo.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Complement")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Neighborhood")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("ProjetoVolvo.Models.Car", b =>
                {
                    b.Property<string>("NumChassi")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Color")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<double>("Mileage")
                        .HasColumnType("float");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("NumChassi");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("ProjetoVolvo.Models.Client", b =>
                {
                    b.Property<string>("Cpf_cnpj")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.HasKey("Cpf_cnpj");

                    b.HasIndex("AddressId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("ProjetoVolvo.Models.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CarId")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ClientCpf_cnpj")
                        .HasColumnType("nvarchar(14)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Installments")
                        .HasColumnType("int");

                    b.Property<string>("SellerCpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CarId")
                        .IsUnique();

                    b.HasIndex("ClientCpf_cnpj");

                    b.HasIndex("SellerCpf");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("ProjetoVolvo.Models.Seller", b =>
                {
                    b.Property<string>("Cpf")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<double>("Wage")
                        .HasColumnType("float");

                    b.Property<int>("WorkLoad")
                        .HasColumnType("int");

                    b.HasKey("Cpf");

                    b.ToTable("Sellers");
                });

            modelBuilder.Entity("AccessoryCar", b =>
                {
                    b.HasOne("ProjetoVolvo.Models.Accessory", null)
                        .WithMany()
                        .HasForeignKey("AccessoriesAccessoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoVolvo.Models.Car", null)
                        .WithMany()
                        .HasForeignKey("CarsNumChassi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjetoVolvo.Models.Client", b =>
                {
                    b.HasOne("ProjetoVolvo.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.Navigation("Address");
                });

            modelBuilder.Entity("ProjetoVolvo.Models.Sale", b =>
                {
                    b.HasOne("ProjetoVolvo.Models.Car", "Car")
                        .WithOne("Sale")
                        .HasForeignKey("ProjetoVolvo.Models.Sale", "CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoVolvo.Models.Client", "Client")
                        .WithMany("Sales")
                        .HasForeignKey("ClientCpf_cnpj");

                    b.HasOne("ProjetoVolvo.Models.Seller", "Seller")
                        .WithMany("Sales")
                        .HasForeignKey("SellerCpf")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Client");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("ProjetoVolvo.Models.Car", b =>
                {
                    b.Navigation("Sale");
                });

            modelBuilder.Entity("ProjetoVolvo.Models.Client", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("ProjetoVolvo.Models.Seller", b =>
                {
                    b.Navigation("Sales");
                });
#pragma warning restore 612, 618
        }
    }
}
